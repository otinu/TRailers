<% posts.each do |post| %>
      <!-- サインアップ直後は投稿画像がなく、エラー画面になってしまう状況を避けます -->
        <% begin %>
           <tr>
            <td align="center">
            <% unless rails_blob_path(post.post_file).match(/\.mp4/) || rails_blob_path(post.post_file).match(/\.pdf/)  %>
             <!-- 「, size: '100x100'」でもリサイズ可能。Gemを使わない場合の代替案 -->
             <%= link_to post_path(post) do %>
              <%= image_tag post.post_file, alt: '画像', class: "post-photo" %>
             <% end %>
             <!-- 「mine_open」では非同期通信が発火しないため、render先でのローカル変数名を変更 -->
             <%= render partial: 'goods/goods_btn', locals: { post: post, user_mine_open: post.user.mine_open, user_others_open: post.user.others_open} %>
            <% end %>

             <% if rails_blob_path(post.post_file).match(/\.mp4/) %> <!-- ファイル拡張子がmp4の場合 -->
                <video src="<%= rails_blob_path(post.post_file) %>" controls></video><!-- width="310" height="310" -->
                <%= render partial: 'goods/goods_btn', locals: { post: post, user_mine_open: post.user.mine_open, user_others_open: post.user.others_open} %>
             <% end %>
             <% if rails_blob_path(post.post_file).match(/\.pdf/) %>
              <iframe src="<%= rails_blob_path(post.post_file) %>"></iframe>
              <%= render partial: 'goods/goods_btn', locals: { post: post, user_mine_open: post.user.mine_open, user_others_open: post.user.others_open} %>
             <% end %>
            </td>
           </tr>
       <% rescue => error %>
         <i class="fa-solid fa-sync fa-spin"></i>
         <% error %> <!-- 例外発生時でも「%=」にせず、ユーザーにはエラー文を非表示にしておきます -->
       <% end %>
<% end %>
<%= paginate posts %>